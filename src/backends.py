# -*- coding: utf-8 -*-import reimport loggingimport configimport datetimefrom google.appengine.ext import webappfrom google.appengine.ext import ereporterfrom google.appengine.ext import dbfrom google.appengine.api import urlfetchfrom google.appengine.api import xmppfrom google.appengine.api.backends import backendsfrom google.appengine.api.urlfetch_errors import DeadlineExceededError from google.appengine.ext.webapp.util import run_wsgi_appfrom database import fxdbfrom boxcargae import BoxcarApifrom string import Template_max_fetch_count = 5def getfx():    urlget = r'http://fx.cmbchina.com/hq/'##    rows = html2table(urllib.urlopen(url).read())    for count in range(_max_fetch_count):        try:            url_result = urlfetch.fetch(url=urlget,deadline=5)            break        except DeadlineExceededError:            logging.debug('Ohh, deadline exceeded, kao!')            if url_result.status_code == 200:        trs = re.findall(r'澳大利亚元.*?欧元', url_result.content, re.DOTALL)        rows = []        for tr in trs:            x = re.findall(r'>([^<>]*)(?:</a>)?</td>', tr, re.DOTALL)            x = map(lambda s: s.strip(), x)            rows.append(x)        return rows[0]# ...class InitHandler(webapp.RequestHandler):    def get(self):         logging.debug('Init GET')    def post(self):          logging.debug('Init POST')       class BackendsHandler(webapp.RequestHandler):    def get(self):         timenow = (datetime.datetime.utcnow()+datetime.timedelta(hours=+8)).strftime("%H%M%S")        haha = getfx()        logging.debug('Backends runtime now: %s, FX: %s, Update: %s' %(timenow,haha[3],haha[6]))        _api_key = 'CMl59ZQnEXv6y9qxpVa1'        _api_sec = 'wz5dCO63okFG2vX08nsOmZQctljxtRLIg3xVW9wS'        _your_email = 'neilma@hotmail.com'        boxcar = BoxcarApi(_api_key,                           _api_sec,                           'http://img.neoease.org/2011/08/star.jpg')           template = Template('Hey $email this was sent')        message = template.substitute(email=_your_email)        mailSubject = '招行澳元汇率提醒:' + haha[3]        boxcar.notify(_your_email,                      mailSubject,                      message,                      message_id=int(datetime.datetime.now().strftime('%f')) / 1000)        #        fxHist = fxdb.all()#        fxHist.order('-indexTime')#        lastfx = fxHist.get().audOfferRate       #        logging.debug(lastfx)#        logging.debug(haha[3])#        if lastfx > haha[3]:#            logging.debug('⬇')#        elif lastfx < haha[3]:#            logging.debug('⬆')#        else:#            logging.debug('-')##        datestring = (datetime.datetime.utcnow()+datetime.timedelta(hours=+8)).strftime("%Y%m%d%H%M%S")# #        fxdb(indexTime=datestring,#             audOfferRate=haha[3],#             audBillBidRate=haha[4],#             audUpdateTime=haha[6],#             usdOfferRate=haha[12],#             usdBillBidRate=haha[13],#             usdUpdateTime=haha[15]).put()            def post(self):          logging.debug('Backends POST')                       logging.getLogger().setLevel(logging.DEBUG)ereporter.register_logger()_handlers = [(r'/_ah/start', InitHandler),             (r'/backend/fetch', BackendsHandler)]application = webapp.WSGIApplication(_handlers, debug=True)                                      def main():    run_wsgi_app(application)if __name__ == "__main__":    main()  